import{aF as m,aV as f,L as w,cy as c,ad as a,dk as o,dh as y,M as _,P as V}from"./index-DubJzO1e.js";import{S as v,u as C}from"./LayerView-sk3SxNIK.js";import{t as g}from"./GraphicContainer-xNyGLmJX.js";import{O as d}from"./GraphicsView2D-VIxpgOkT.js";import"./Container-Y9YAhDWp.js";import"./AGraphicContainer-MicBFBm6.js";import"./TechniqueInstance-Xf1-OsI_.js";import"./UpdateTracking2D-dn2j__80.js";import"./Utils-B8RstK5r.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BVb9QOip.js";import"./ProgramTemplate-RIV0pgUG.js";import"./TileContainer-IRSXOXSv.js";import"./WGLContainer-Bxy5DVuA.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C5E34EGD.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DVdXNw3y.js";import"./OptimizedFeature-CffJwLz5.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-D0DVW8b1.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-DFHAYGaZ.js";import"./ShaderBuilder-DGhO0yM1.js";import"./BindType-BBwFZqyN.js";import"./utils-CXOsfXEn.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-po60fnL_.js";import"./AttributeStore-_OFfVcZo.js";import"./queryUtils-uVDS93zc.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dp33ybIW.js";import"./normalizeUtilsSync-zTX3Jawl.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CQAuM6D7.js";const u="sublayers",l="layerView",H=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),(t=>{const s=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const h=this._graphicsViewsFeatureCollectionMap.get(t);for(const r of s)!r.popupTemplate&&h.popupTemplate&&(r.popupTemplate=h.popupTemplate),r.sourceLayer=r.layer=this.layer}return s})).flat().map((t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i})))}highlight(i,e="default"){let t;typeof i=="number"?t=[i]:i instanceof m?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((h=>h&&h.uid)):f.isCollection(i)&&(t=i.map((h=>h&&h.uid)).toArray());const s=t==null?void 0:t.filter(w);return s!=null&&s.length?(this._addHighlight(s),c((()=>this._removeHighlight(s)))):c()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of t){const h=new g(this.view.featuresTilingScheme),r=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:e,container:h});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([a((()=>s.visible),(p=>r.container.visible=p),o),a((()=>r.updating),(()=>this.notifyChange("updating")),o)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y((()=>this.layer.sublayers),"change",(()=>this._createGraphicsViews()),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),u)}detach(){this._destroyGraphicsViews(),this.removeHandles(u)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],e=this.view,t=()=>this.requestUpdate();for(const s of this.layer.sublayers){const h=new g(this.view.featuresTilingScheme);h.fadeTransitionEnabled=!0;const r=new d({view:e,graphics:s.graphics,requestUpdateCallback:t,container:h});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),a((()=>s.visible),(p=>r.container.visible=p),o),a((()=>r.updating),(()=>this.notifyChange("updating")),o)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map((s=>({objectId:s,highlightFlags:e}))))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const oi=n;export{oi as default};
