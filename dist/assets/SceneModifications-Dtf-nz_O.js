import{B as d,aB as h,f4 as w,cp as g,i$ as N,aH as R,M as s,N as c,fV as u,T as J,P as S,aV as O,I as v,Y as x}from"./index-DMW0RaRK.js";var m;let o=m=class extends d{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,r,a,t){var n;if((n=t.layer)!=null&&n.spatialReference&&!t.layer.spatialReference.equals(this.geometry.spatialReference)){if(!h(e.spatialReference,t.layer.spatialReference))return void((t==null?void 0:t.messages)&&t.messages.push(new w("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:t.layer.spatialReference,context:t})));const p=new g;N(e,p,t.layer.spatialReference),r[a]=p.toJSON(t)}else r[a]=e.toJSON(t);delete r[a].spatialReference}clone(){return new m({geometry:R(this.geometry),type:this.type})}};s([c({type:g}),u()],o.prototype,"geometry",void 0),s([J(["web-scene","portal-item"],"geometry")],o.prototype,"writeGeometry",null),s([c({type:["clip","mask","replace"],nonNullable:!0}),u()],o.prototype,"type",void 0),o=m=s([S("esri.layers.support.SceneModification")],o);var i;let l=i=class extends d.JSONSupportMixin(O.ofType(o)){constructor(e){super(e),this.url=null}clone(){return new i({url:this.url,items:this.items.map((e=>e.clone()))})}toJSON(e){return this.toArray().map((r=>r.toJSON(e))).filter((r=>!!r.geometry))}static fromJSON(e,r){const a=new i;for(const t of e)a.add(o.fromJSON(t,r));return a}static async fromUrl(e,r,a){const t={url:v(e),origin:"service"},n=await x(e,{responseType:"json",signal:a==null?void 0:a.signal}),p=r.toJSON(),y=[];for(const f of n.data)y.push(o.fromJSON({...f,geometry:{...f.geometry,spatialReference:p}},t));return new i({url:e,items:y})}};s([c({type:String})],l.prototype,"url",void 0),l=i=s([S("esri.layers.support.SceneModifications")],l);export{l as n};
