import{aO as x,bk as u,aP as E,b6 as h,fd as I,ar as en,aR as an,fe as cn,ff as m,f1 as l,aM as M,f0 as p,fg as un,e_ as F,fh as $,fi as gn,bA as bn,av as O,fj as fn,fk as ln,e$ as B,fl as S,ba as D}from"./index-JAk2srNG.js";import{s as Y,w as pn}from"./sphere-6CW-UmLr.js";import{e as K}from"./mat4f64-q_b6UJoq.js";import{A as U,M as dn,v as mn}from"./lineSegment-DDNOprv4.js";import{M as A,P as k,D as hn,O as N,y as In,H as Pn,q as Mn,U as $n,z as L,h as wn,x as Nn,w as vn}from"./plane-pU8z34zR.js";import{c as e,a as w}from"./vectorStacks-B5Fqa3RJ.js";const V=()=>en.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");class An{constructor(){this.plane=A(),this.origin=M(),this.basis1=M(),this.basis2=M()}}const Tn=An;function P(n=on){return{plane:A(n.plane),origin:E(n.origin),basis1:E(n.basis1),basis2:E(n.basis2)}}function yn(n,s,i){const t=Dn.get();return t.origin=n,t.basis1=s,t.basis2=i,t.plane=hn(0,0,0,0),y(t),t}function T(n,s=P()){return W(n.origin,n.basis1,n.basis2,s)}function _n(n,s){u(s.origin,n.origin),u(s.basis1,n.basis1),u(s.basis2,n.basis2),wn(s.plane,n.plane)}function W(n,s,i,t=P()){return u(t.origin,n),u(t.basis1,s),u(t.basis2,i),y(t),Rn(t,"fromValues()"),t}function y(n){k(n.basis2,n.basis1,n.origin,n.plane)}function X(n,s,i){n!==i&&T(n,i);const t=l(e.get(),f(n),s);return p(i.origin,i.origin,t),i.plane[3]-=s,i}function xn(n,s,i){return Z(s,i),X(i,C(n,n.origin),i),i}function En(n,s){const i=n.basis1[0],t=n.basis2[1],[r,o]=n.origin;return bn(r-i,o-t,r+i,o+t,s)}function Z(n,s=P()){const i=(n[2]-n[0])/2,t=(n[3]-n[1])/2;return $(s.origin,n[0]+i,n[1]+t,0),$(s.basis1,i,0,0),$(s.basis2,0,t,0),$n(0,0,1,0,s.plane),s}function q(n,s,i){return!!Mn(n.plane,s,i)&&tn(n,i)}function On(n,s,i){if(q(n,s,i))return i;const t=J(n,s,e.get());return p(i,s.origin,l(e.get(),s.direction,gn(s.origin,t)/I(s.direction))),i}function J(n,s,i){const t=v.get();rn(n,s,t,v.get());let r=Number.POSITIVE_INFINITY;for(const o of R){const a=H(n,o,_.get()),g=e.get();if(Nn(t,a,g)){const c=fn(e.get(),s.origin,g),b=Math.abs(ln(h(s.direction,c)));b<r&&(r=b,u(i,g))}}return r===Number.POSITIVE_INFINITY?Q(n,s,i):i}function Sn(n,s){return(s-n)/s}function Q(n,s,i){if(q(n,s,i))return i;const t=v.get(),r=v.get();rn(n,s,t,r);let o=Number.POSITIVE_INFINITY;for(const a of R){const g=H(n,a,_.get()),c=e.get();if(vn(t,g,c)){const b=pn(s,c);if(!L(r,c))continue;b<o&&(o=b,u(i,c))}}return z(n,s.origin)<o&&nn(n,s.origin,i),i}function nn(n,s,i){const t=Pn(n.plane,s,e.get()),r=U(G(n,n.basis1),t,-1,1,e.get()),o=U(G(n,n.basis2),t,-1,1,e.get());return F(i,p(e.get(),r,o),n.origin),i}function sn(n,s,i){const{origin:t,basis1:r,basis2:o}=n,a=F(e.get(),s,t),g=w(r,a),c=w(o,a),b=w(f(n),a);return $(i,g,c,b)}function z(n,s){const i=sn(n,s,e.get()),{basis1:t,basis2:r}=n,o=I(t),a=I(r),g=Math.max(Math.abs(i[0])-o,0),c=Math.max(Math.abs(i[1])-a,0),b=i[2];return g*g+c*c+b*b}function Vn(n,s){return Math.sqrt(z(n,s))}function jn(n,s){let i=Number.NEGATIVE_INFINITY;for(const t of R){const r=H(n,t,_.get()),o=dn(r,s);o>i&&(i=o)}return Math.sqrt(i)}function kn(n,s){return L(n.plane,s)&&tn(n,s)}function Fn(n,s,i,t){return Hn(n,i,t)}function C(n,s){const i=-n.plane[3];return w(f(n),s)-i}function Yn(n,s,i,t){const r=C(n,s),o=l(Bn,f(n),i-r);return p(t,s,o),t}function qn(n,s){return O(n.basis1,s.basis1)&&O(n.basis2,s.basis2)&&O(n.origin,s.origin)}function zn(n,s,i){return n!==i&&T(n,i),an(d,s),cn(d,d),m(i.basis1,n.basis1,d),m(i.basis2,n.basis2,d),m(N(i.plane),N(n.plane),d),m(i.origin,n.origin,s),In(i.plane,i.plane,i.origin),i}function Cn(n,s,i,t){return n!==t&&T(n,t),un(j,s,i),m(t.basis1,n.basis1,j),m(t.basis2,n.basis2,j),y(t),t}function f(n){return N(n.plane)}function Hn(n,s,i){switch(s){case S.X:u(i,n.basis1),D(i,i);break;case S.Y:u(i,n.basis2),D(i,i);break;case S.Z:u(i,f(n))}return i}function tn(n,s){const i=F(e.get(),s,n.origin),t=B(n.basis1),r=B(n.basis2),o=h(n.basis1,i),a=h(n.basis2,i);return-o-t<0&&o-t<0&&-a-r<0&&a-r<0}function G(n,s){const i=_.get();return u(i.origin,n.origin),u(i.vector,s),i}function H(n,s,i){const{basis1:t,basis2:r,origin:o}=n,a=l(e.get(),t,s.origin[0]),g=l(e.get(),r,s.origin[1]);p(i.origin,a,g),p(i.origin,i.origin,o);const c=l(e.get(),t,s.direction[0]),b=l(e.get(),r,s.direction[1]);return l(i.vector,p(c,c,b),2),i}function Rn(n,s){Math.abs(h(n.basis1,n.basis2)/(I(n.basis1)*I(n.basis2)))>1e-6&&V().warn(s,"Provided basis vectors are not perpendicular"),Math.abs(h(n.basis1,f(n)))>1e-6&&V().warn(s,"Basis vectors and plane normal are not perpendicular"),Math.abs(-h(f(n),n.origin)-n.plane[3])>1e-6&&V().warn(s,"Plane offset is not consistent with plane origin")}function rn(n,s,i,t){const r=f(n);k(r,s.direction,s.origin,i),k(N(i),r,s.origin,t)}const on={plane:A(),origin:x(0,0,0),basis1:x(1,0,0),basis2:x(0,1,0)},v=new Y(A),_=new Y(mn),Bn=M(),Dn=new Y((()=>P())),R=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],d=K(),j=K(),Zn=Object.freeze(Object.defineProperty({__proto__:null,BoundedPlaneClass:Tn,altitudeAt:C,axisAt:Fn,cameraFrustumCoverage:Sn,closestPoint:Q,closestPointOnSilhouette:J,copy:T,copyWithoutVerify:_n,create:P,distance:Vn,distance2:z,distanceToSilhouette:jn,elevate:X,equals:qn,extrusionContainsPoint:kn,fromAABoundingRect:Z,fromValues:W,getExtent:En,intersectRay:q,intersectRayClosestSilhouette:On,normal:f,projectPoint:nn,projectPointLocal:sn,rotate:Cn,setAltitudeAt:Yn,setExtent:xn,transform:zn,up:on,updateUnboundedPlane:y,wrap:yn},Symbol.toStringTag,{value:"Module"}));export{W as J,y as K,P as W,T as Z,Vn as g,Zn as k,Z as t};
