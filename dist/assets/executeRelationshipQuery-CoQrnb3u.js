import{Y as m,fu as p,il as l,U as f,aL as j}from"./index-Bqc9jASG.js";import{t as R}from"./query-DDlyrezj.js";import"./pbfQueryUtils-9mWjE2TH.js";import"./pbf-BAjtXXSA.js";import"./OptimizedFeature-CGsVvS3U.js";import"./OptimizedFeatureSet-BR8EEvDc.js";function h(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!(t!=null&&t.returnCountOnly)?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSR&&(e.outSR=p(e.outSR)),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function F(r,t,e){const n=await y(r,t,e),o=n.data,s=o.geometryType,a=o.spatialReference,c={};for(const u of o.relatedRecordGroups){const d={fields:void 0,geometryType:s,spatialReference:a,hasZ:!!o.hasZ,hasM:!!o.hasM,features:u.relatedRecords};if(u.objectId!=null)c[u.objectId]=d;else for(const i of Object.keys(u))i!=="relatedRecords"&&(c[u[i]]=d)}return{...n,data:c}}async function b(r,t,e){const n=await y(r,t,e,{returnCountOnly:!0}),o=n.data,s={};for(const a of o.relatedRecordGroups)a.objectId!=null&&(s[a.objectId]=a.count);return{...n,data:s}}async function y(r,t,e={},n){const o=R({...r.query,f:"json",...n,...h(t,n)});return m(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function B(r,t,e){t=l.from(t);const n=f(r);return F(n,t,e).then((o=>{const s=o.data,a={};return Object.keys(s).forEach((c=>a[c]=j.fromJSON(s[c]))),a}))}async function C(r,t,e){t=l.from(t);const n=f(r);return b(n,t,{...e}).then((o=>o.data))}export{B as executeRelationshipQuery,C as executeRelationshipQueryForCount};
