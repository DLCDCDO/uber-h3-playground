import{ae as A,cY as W,cA as v,cy as Z,lZ as x,l_ as D,al as h,Y as m,ax as l,ak as Q,l$ as X,m0 as ee,m1 as se,as as te,ao as oe,m2 as ne,r as ae,fq as re,aq as ie,aE as ce,ar as le}from"./index-DZ60W3WD.js";import{f as ue,b as pe,y as fe,i as E,n as N}from"./External-BFbNCZ6y.js";import{r as me,n as de,t as ge,l as he,c as I,a as ye,b as we,d as Pe,u as be,p as Te}from"./meshSpatialReferenceScaleUtils-D7karWwS.js";import{i as Ae,n as ve}from"./meshFeatureAttributes-C5udtgel.js";import"./MeshTransform-CPg5nG71.js";import"./mat4f64-q_b6UJoq.js";import"./quat-532LRWSO.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-CYSuTKnR.js";const $={uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function y(t,s=o=>{},e){return new $e(t,s,e)}let $e=class{constructor(s,e=n=>{},o){if(this.onProgress=e,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof s=="number"){this._weights={};for(let n=0;n<s;n++){const a=n,r=1/s;this._weights[a]=r,this._progressMap.set(a,0)}}else this._weights=s;this.emitProgress()}emitProgress(){let s=0;for(const[e,o]of this._progressMap.entries())s+=o*this._weights[e];if(s===1&&A("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[o,n]of this._timingsMap){const a=Math.round(n.end-n.start)/1e3,r=Math.round(a/e*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:a,relativeTime:r})}}this.onProgress(s)}setProgress(s,e){if(this._progressMap.set(s,e),A("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??(this._startTime=o);const n=W(this._timingsMap,s,(()=>({start:o,end:0})));e===1&&(n.end=o)}this.emitProgress()}simulate(s,e){return k((o=>this.setProgress(s,o)),e)}makeOnProgress(s){return e=>this.setProgress(s,e)}};function k(t=e=>{},s=xe){const e=performance.now();t(0);const o=setInterval((()=>{const n=performance.now()-e,a=1-Math.exp(-n/s);t(a)}),_e);return Z((()=>{clearInterval(o),t(1)}))}function Me(t,s=Fe){return x(D(t*R/s))}function je(t,s=Se){return x(D(t*R/s))}const Fe=10,Se=10,R=8e-6,_e=v(50),xe=v(1e3),C=1e6,_=20*C,De=2e9,Ee=3;async function Ne({data:t,name:s,description:e},o,n){let a=null;try{const r=h(o,"uploads"),i=h(r,"info"),{data:u}=await m(i,{query:{f:"json"},responseType:"json"});l(n);const d=Q(o),g=u.maxUploadFileSize*C,f=d?De:g,c=d?Math.min(_,g):_;if(t.size>f)throw new Error("Data too large");const z=h(r,"register"),{data:M}=await m(z,{query:{f:"json",itemName:Ie(s),description:e},responseType:"json",method:"post"});if(l(n),!M.success)throw new Error("Registration failed");const{itemID:L}=M.item;a=h(r,L);const H=h(a,"uploadPart"),j=Math.ceil(t.size/c),w=new Array;for(let p=0;p<j;++p)w.push(t.slice(p*c,Math.min((p+1)*c,t.size)));const P=w.slice().reverse(),F=new Array,G=y(j,n==null?void 0:n.onProgress,"uploadItem"),J=async()=>{for(;P.length!==0;){const p=w.length-P.length,b=P.pop(),T=new FormData,K=G.simulate(p,Me(b.size));try{T.append("f","json"),T.append("file",b),T.append("partId",`${p}`);const{data:V}=await m(H,{timeout:0,body:T,responseType:"json",method:"post"});if(l(n),!V.success)throw new Error("Part upload failed")}finally{K.remove()}}};for(let p=0;p<Ee&&P.length!==0;++p)F.push(J());await Promise.all(F);const Y=h(a,"commit"),{data:S}=await m(Y,{query:{f:"json",parts:w.map(((p,b)=>b)).join(",")},responseType:"json",method:"post"});if(l(n),!S.success)throw new Error("Commit failed");return S.item}catch(r){if(a!=null){const i=h(a,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw r}}function Ie(t){return t.replaceAll("/","_").replaceAll("\\","_")}async function ms(t,s,e){var a;const o=t.length;if(!o)return(a=e==null?void 0:e.onProgress)==null||a.call(e,1),[];const n=y(o,e==null?void 0:e.onProgress,"uploadAssets");return Promise.all(t.map(((r,i)=>ke(r,s,{...e,onProgress:n.makeOnProgress(i)}))))}async function ke(t,{layer:s,ongoingUploads:e},o){var r;const n=e.get(t);if(n)return n;if(!Xe(s))throw new me;if(Re(t,s))return(r=o==null?void 0:o.onProgress)==null||r.call(o,1),t;const a=Ce(t,s,o);e.set(t,a);try{await a}finally{e.delete(t)}return t}function Re(t,s){const{parsedUrl:e}=s;return e!=null&&t.metadata.externalSources.some((o=>ue(o,e)))}async function Ce(t,s,e){const{metadata:o}=t,{displaySource:n}=o,a=q(n==null?void 0:n.source,s,{checkForConversionRequired:A("enable-feature:georeferenced-uploads")}),r=a!=null?qe(a,s,e):o.externalSources.length>0?Ue(t,s,e):Oe(t,s,e),i=await r;return l(e),t.addExternalSources([i]),t}async function qe(t,s,e){return{source:{type:"service",assets:await U(t,s,e)},original:!0,unitConversionDisabled:!0}}async function Ue(t,s,e){const o=B(s),{externalSources:n}=t.metadata,a=ze(n,s);if(!a)throw new de;const r=y($.uploadConvertibleSource,e==null?void 0:e.onProgress,"uploadConvertibleSource"),i={type:"service",assets:await U(a,s,{onProgress:r.makeOnProgress("uploadEditSource")})};t.addExternalSources([{source:i,original:!0}]);const u=a.reduce(((g,{asset:f})=>f instanceof File?g+f.size:g),0),d=r.simulate("serviceAssetsToGlb",je(u));try{const{source:g,transform:f,origin:c}=await Ve(i,s,o);return t.transform=f,c&&(t.metadata.georeferenced=!0,e!=null&&e.useAssetOrigin&&(t.vertexSpace.origin=[c.x,c.y,c.z??0],t.spatialReference=c.spatialReference)),{source:g,unitConversionDisabled:!0}}finally{d.remove()}}async function Oe(t,s,e){const o=y($.uploadLocalMesh,e==null?void 0:e.onProgress,"uploadLocalMesh"),n=Be(t,s,{...e,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:{type:"service",assets:await O([n],s,{...e,onProgress:o.makeOnProgress("uploadAssetBlobs")})},extent:t.extent.clone(),original:!0}}async function Be(t,s,e){const o=B(s),n=await t.load(e),a=await n.toBinaryGLTF({origin:n.origin,signal:e==null?void 0:e.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return l(e),{blob:new Blob([a],{type:"model/gltf-binary"}),assetName:`${te()}.glb`,assetType:o}}function ze(t,s){for(const e of t){const o=q(e.source,s);if(o)return o}return null}function q(t,{infoFor3D:s},e={}){if(!t)return null;const o=pe(t);if(!o)return null;const{supportedFormats:n,editFormats:a}=s,r=new Array,i=X(s),u=ee(s);let d=!1;for(const g of o){const f=Le(g,n);if(!f)return null;const{assetType:c}=f;if(e.checkForConversionRequired&&(c===i||c===u))return null;a.includes(c)&&(d=!0),r.push(f)}return d?r:null}function Le(t,s){const e=fe(t,s);return e?{asset:t,assetType:e}:null}async function U(t,s,e){return O(t.map((o=>He(o,e))),s,e)}async function O(t,s,e){const o=y($.uploadAssetBlobs,e==null?void 0:e.onProgress,"uploadAssetBlobs"),n=await Je(t,s,{...e,onProgress:o.makeOnProgress("prepareAssetItems")});l(e);const a=n.map((({item:i})=>i)),{uploadResults:r}=await Ye(a,s,{...e,onProgress:o.makeOnProgress("uploadAssetItems")});return l(e),t.map(((i,u)=>Ke(n[u],r[u],s)))}async function He(t,s){const{asset:e,assetType:o}=t;if(e instanceof File)return{blob:e,assetName:e.name,assetType:o};const n=await e.toBlob(s);return l(s),{blob:n,assetName:e.assetName,assetType:o}}async function Ge(t,s,e){const{blob:o,assetType:n,assetName:a}=t;let r=null;try{const i=await Ne({data:o,name:a},s.url,e);l(e),r={assetType:n,assetUploadId:i.itemID}}catch(i){ie(i),es().warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!r){const i=await ce(o);if(l(e),!i.isBase64)throw new be;r={assetType:n,assetData:i.data}}if(!r)throw new Te;return{item:r,assetName:a}}function Je(t,s,e){const o=y(t.length,e==null?void 0:e.onProgress,"prepareAssetItems");return Promise.all(t.map((async(n,a)=>{const r=Ge(await n,s,{...e,onProgress:o.makeOnProgress(a)});return l(e),r})))}async function Ye(t,s,e){const o=k(e==null?void 0:e.onProgress);try{const n=await m(h(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(t)},method:"post",responseType:"json"});if(l(e),n.data.uploadResults.length!==t.length)throw new we(t.length,n.data.uploadResults.length);return n.data}finally{o.remove()}}function Ke(t,s,e){const{success:o}=s;if(!o){const{error:d}=s;throw new Pe(t.assetName,d)}const{assetHash:n}=s,{assetName:a,item:{assetType:r}}=t,{infoFor3D:{supportedFormats:i}}=e,u=re(r,i);if(!u)throw new I(r);return new E(a,u,[new N(`${e.parsedUrl.path}/assets/${n}`,n)])}async function Ve({assets:t},s,e){var a;const o=t.map((({assetName:r,parts:i})=>({assetName:r,assetHash:i[0].partHash})));let n;try{const r=h(s.parsedUrl.path,"convert3D"),i=(a=s.capabilities)==null?void 0:a.operations.supportsAsyncConvert3D;n=(await(i?Qe:Ze)(r,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:e,async:i},responseType:"json",timeout:0})).data}catch{throw new he}return We(s,n)}function We(t,s){const e={source:{type:"service",assets:s.assets.map((o=>{const n=ne(o.contentType,t.infoFor3D.supportedFormats);if(!n)throw new I(n);return new E(o.assetName,o.contentType,[new N(o.assetURL,o.assetHash)])}))},origin:void 0,transform:void 0};if(A("enable-feature:georeferenced-uploads")&&s.transform){if(e.transform=Ae(s.transform),s.spatialReference){const o=ae.fromJSON(s.spatialReference);e.origin=ve(s.transform,o)}}else e.transform=ye(t.spatialReference);return e}function Ze(t,s){return m(t,s)}async function Qe(t,s){const e=(await m(t,s)).data.statusUrl;for(;;){const o=(await m(e,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return m(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await oe(ss)}}function Xe(t){return!!t.infoFor3D&&!!t.url}function B({infoFor3D:t}){const s=se(t);if(!s)throw new ge;return s}function es(){return le.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const ss=v(1e3);export{ms as uploadAssets};
