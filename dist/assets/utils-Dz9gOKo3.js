import{c4 as z,c3 as C,c5 as O,r as R,ei as A,cq as G,aw as Y,ej as D,ek as S,el as v,em as V,s as U,e1 as _}from"./index-B0RXyCM4.js";import{m as E,B as k}from"./utils-CfOye6c-.js";let f=null;const q=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function L(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function Q(e,t,n,i){const s=A(n)?G(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map((a=>{const l=new Y(a.geometry);return D(t,l,l),a.geometry=s?L(l,o??0,i[0]):l,a}))}function W(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(_(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const F=S(n);for(const{geometry:p,attributes:N}of e){const{x:g,y:c}=p,w=Math.max(0,g-t),b=Math.max(0,c-t),M=Math.min(s,c+t),x=Math.min(i,g+t),h=+F(N);for(let m=b;m<M;m++)for(let d=w;d<x;d++){const I=m*i+d,$=V(d-g,m-c,t)*h,u=o[I]+=$;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function P(e){const t=q.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function X(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:a,fieldInfos:l,timeZone:F}=e,p=i&&(l==null?void 0:l.find((u=>u.name.toLowerCase()===i.toLowerCase()))),N=!!p&&z(p),g=!!p&&C(p),c=e.valueExpression,w=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await O();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new R(h.spatialReference)}):null}const I=e.fieldInfos,$=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&I?{fields:I}:null;return t.forEach((u=>{const y=u.attributes;let r;if(c){const T=$?{...u,layer:$}:u,j=f.createExecContext(T,d,F);r=f.executeFunction(m,j)}else y&&(r=y[i],s?(r=`${E(r)}${a}${E(y[s])}`,o&&(r=`${r}${a}${E(y[o])}`)):typeof r=="string"&&n&&(g?r=r?new Date(r).getTime():null:N&&(r=r?P(r):null)));if(w&&typeof r=="number"&&isFinite(r)){const T=y&&parseFloat(y[b]);r=k(r,w,T,M)}x.push(r)})),x}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?B(i,s):i||s,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=Z({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=H({layer:e,fields:t});return s.length?new U(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Z(e){const t=e.layer;return e.fields.filter((n=>!t.getField(n)))}function H(e){const t=e.layer;return e.fields.filter((n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics}))}export{ee as F,P as I,ne as M,te as N,ie as T,B as U,X as b,W as w,Q as x};
