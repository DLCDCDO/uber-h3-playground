import{M as t,N as s,gr as h,P as a,B as m,cK as j,U as w,X as g,V as O,Y as S}from"./index-JAk2srNG.js";import{t as x}from"./utils-BSoQYw0r.js";import"./applyEditsUtils-Dq0OsLaS.js";import"./MeshTransform-POHkX56u.js";import"./mat4f64-q_b6UJoq.js";import"./quat-DtycUtGg.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-BykqcMcW.js";import"./editingSupport-3atUVWDK.js";let o=class extends m{constructor(i){super(i),this.error=null,this.geometry=null,this.name=null}};t([s({type:Object})],o.prototype,"error",void 0),t([s({type:h})],o.prototype,"geometry",void 0),t([s({type:String})],o.prototype,"name",void 0),o=t([a("esri.rest.networks.circuits.support.CircuitVerifyResult")],o);const u=o;let r=class extends m{constructor(e){super(e),this.circuits=[],this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,p){return x(e)}};t([s({type:[u],json:{type:[u],write:!0}})],r.prototype,"circuits",void 0),t([s({type:Date,json:{type:Number,write:{writer:(i,e)=>{e.moment=i?i.getTime():null}}}})],r.prototype,"moment",void 0),t([s({type:Boolean,json:{type:Boolean,write:!0}})],r.prototype,"exceededTransferLimit",void 0),t([s({type:[Object],json:{type:[Object],write:!0}})],r.prototype,"serviceEdits",void 0),t([j("serviceEdits")],r.prototype,"readServiceEdits",null),r=t([a("esri.rest.networks.circuits.support.VerifyCircuitsResult")],r);async function R(i,e,p){const c=w(i),n=e.toJSON();e.circuits&&(n.circuits=JSON.stringify(e.circuits));const y={...n,f:"json"},l=g({...c.query,...y}),d=O(l,{...p,method:"post"}),f=`${c.path}/circuits/verify`,{data:v}=await S(f,d);return r.fromJSON(v)}export{R as verifyCircuits};
